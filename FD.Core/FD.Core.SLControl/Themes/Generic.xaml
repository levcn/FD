<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
    xmlns:sl="http://schemas.levcn.com/2013/xaml/presentation"
    xmlns:editor1="clr-namespace:SLControls.Editor1">
    
<!--    <SolidColorBrush x:Key="PickerForeground_Normal" Color="#FF000000"/>-->
<!--    <SolidColorBrush x:Key="一般背景色" Color="#EFEFEF"/>-->
<!--    <SolidColorBrush x:Key="不重要文字颜色" Color="#FF848484"/>-->
<!--    <SolidColorBrush x:Key="不重要边框颜色" Color="#CDCDCD"/>-->
<!--    ~1~            通用控件边框色@1@-->
<!--    <SolidColorBrush x:Key="ControlOuterBorder" Color="#6090BE"/>-->
<!--    ~1~            确认按钮@1@-->
<!--    <SolidColorBrush x:Key="ControlBackground_MouseOver" Color="#6090BE"/>-->
<!--    <SolidColorBrush x:Key="ButtonOutSolidColorBrush" Color="#6090BE"/>-->
<!--    <SolidColorBrush x:Key="ButtonEnterBackGroundNormal" Color="#51A0EB"/>-->
<!--    <SolidColorBrush x:Key="ButtonEnterForegroundNormal" Color="#FFFFFF"/>-->
<!--    <SolidColorBrush x:Key="ControlOuterBorder_Normal" Color="#FF848484"/>-->
<!--    <SolidColorBrush x:Key="PickerBackground_Normal" Color="#FFFFFFFF"/>-->
<!--    <CornerRadius x:Key="ControlOuterBorder_CornerRadius">1</CornerRadius>-->
<!--    <SolidColorBrush x:Key="ControlBackground_ReadOnly" Color="#5EC9C9C9"/>-->
<!--    <SolidColorBrush x:Key="ControlOuterBorder_MouseOver" Color="#FFFFC92B"/>-->
<!--    <CornerRadius x:Key="SplitButton_SpanCornerRadius">1</CornerRadius>-->
<!--    <SolidColorBrush x:Key="ControlOuterBorder_Disabled" Color="#FF989898"/>-->
<!--    <SolidColorBrush x:Key="ControlBackground_Disabled" Color="#FFE0E0E0"/>-->
<!--    <SolidColorBrush x:Key="ControlOuterBorder_Focused" Color="#FFFFC92B"/>-->
<!--    <SolidColorBrush x:Key="ControlInnerBorder_Focused" Color="Transparent"/>-->
<!--    <CornerRadius x:Key="SplitButton_SpanInnerCornerRadius">0</CornerRadius>-->
    <ResourceDictionary.MergedDictionaries>
<!--        <ResourceDictionary Source="TagViewStyle.xaml">
    <Style TargetType="local:UploadFileItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:UploadFileItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:DownloadFileList">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:DownloadFileList">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:EditItemDateTime">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:EditItemDateTime">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:MainFrame">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:MainFrame">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:ListDownPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:ListDownPanel">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SearchBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SearchBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>-->



        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/Main.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EditItemsStyle.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EditorPanel.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/ECheckBox.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/ItemContainer.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/ListPanel.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/RadWindowLayer.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EList.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EditItemDateTime.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EditItemText.xaml" />

        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/TagViewStyle.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EditItemPicture.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/EditItemTextBox.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/NavigatorMenu.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/DownloadStyle.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/BigFieldEditor.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/UploadStyle.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/Login.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/ControlEditPanel.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/GridView.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/FormEditor.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/UserGridView.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/MainFrame/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/SubFrame/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/DateTimePicker/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/MessageEditor/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/UserSelector/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/ListDownPanel/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/SearchBox/Default1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/UserTree/UserTree_Style1.xaml" />
        <ResourceDictionary Source="/FD.Core.SLControl;Component/Themes/Test.xaml" />
        
    </ResourceDictionary.MergedDictionaries>

   

    <Style TargetType="sl:LevcnValidTooltip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:LevcnValidTooltip">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="LayoutRoot" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <TextBlock x:Name="TB_Msg" TextWrapping="Wrap" Text="{TemplateBinding Text}"  FontSize="12" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="条目" TargetType="sl:SelectedButton">
        <Setter Property="Background" Value="#FF1F3B53"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:SelectedButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                        <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectedStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedGrid">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0">-->
<!--                                                <DiscreteObjectKeyFrame.Value>-->
<!--                                                    <Visibility>Visible</Visibility>-->
<!--                                                </DiscreteObjectKeyFrame.Value>-->
<!--                                            </DiscreteObjectKeyFrame>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="grid">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0">-->
<!--                                                <DiscreteObjectKeyFrame.Value>-->
<!--                                                    <Visibility>Collapsed</Visibility>-->
<!--                                                </DiscreteObjectKeyFrame.Value>-->
<!--                                            </DiscreteObjectKeyFrame>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.Background)" Storyboard.TargetName="Background">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0">-->
<!--                                                <DiscreteObjectKeyFrame.Value>-->
<!--                                                    <SolidColorBrush Color="#FF084071"/>-->
<!--                                                </DiscreteObjectKeyFrame.Value>-->
<!--                                            </DiscreteObjectKeyFrame>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="grid1">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0">-->
<!--                                                <DiscreteObjectKeyFrame.Value>-->
<!--                                                    <SolidColorBrush Color="#FF084071"/>-->
<!--                                                </DiscreteObjectKeyFrame.Value>-->
<!--                                            </DiscreteObjectKeyFrame>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill)" Storyboard.TargetName="MaskVisualElement">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Null}"/>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="SelectedGrid">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0">-->
<!--                                                <DiscreteObjectKeyFrame.Value>-->
<!--                                                    <HorizontalAlignment>Center</HorizontalAlignment>-->
<!--                                                </DiscreteObjectKeyFrame.Value>-->
<!--                                            </DiscreteObjectKeyFrame>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
<!--                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.VerticalAlignment)" Storyboard.TargetName="SelectedGrid">-->
<!--                                            <DiscreteObjectKeyFrame KeyTime="0">-->
<!--                                                <DiscreteObjectKeyFrame.Value>-->
<!--                                                    <VerticalAlignment>Center</VerticalAlignment>-->
<!--                                                </DiscreteObjectKeyFrame.Value>-->
<!--                                            </DiscreteObjectKeyFrame>-->
<!--                                        </ObjectAnimationUsingKeyFrames>-->
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnSelected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" d:IsHidden="True">
                            <Grid x:Name="grid1"  Margin="1">
                                <Border Opacity="0"  x:Name="BackgroundAnimation" />
                                <Rectangle x:Name="BackgroundGradient" />
                            </Grid>
                        </Border>

                        <ContentPresenter
                                x:Name="contentPresenter"
                                ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" Cursor="Hand" Content=""/>
                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Opacity="0" IsHitTestVisible="false"  Height="45" Width="87"/>
                        <Rectangle x:Name="MaskVisualElement" RadiusX="0" RadiusY="0" Opacity="0.2" IsHitTestVisible="false" Fill="Black" Visibility="Collapsed"/>
                        <!--dsfds -->
                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="0" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" Height="56" VerticalAlignment="Center" RenderTransformOrigin="0.734,0.709" Cursor="Hand" />
                        <Grid x:Name="grid" Opacity="1"  Background="{TemplateBinding Background}"  HorizontalAlignment="Center" Width="50" Height="60" Margin="0,2,0,4" VerticalAlignment="Center" Cursor="Hand"/>
                        <Grid x:Name="SelectedGrid" Visibility="Collapsed" Opacity="1"  Background="{TemplateBinding SelectedBackground}"  HorizontalAlignment="Right" Width="50" Height="60" Margin="0,2,0,4"/>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--    <Style TargetType="sl:SelectedButton">-->
<!--        <Setter Property="Background" Value="#FF1F3B53"/>-->
<!--        <Setter Property="Foreground" Value="#FF000000"/>-->
<!--        <Setter Property="Padding" Value="3"/>-->
<!--        <Setter Property="BorderThickness" Value="1"/>-->
<!--        <Setter Property="BorderBrush">-->
<!--            <Setter.Value>-->
<!--                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">-->
<!--                    <GradientStop Color="#FFA3AEB9" Offset="0"/>-->
<!--                    <GradientStop Color="#FF8399A9" Offset="0.375"/>-->
<!--                    <GradientStop Color="#FF718597" Offset="0.375"/>-->
<!--                    <GradientStop Color="#FF617584" Offset="1"/>-->
<!--                </LinearGradientBrush>-->
<!--            </Setter.Value>-->
<!--        </Setter>-->
<!--        <Setter Property="Template">-->
<!--            <Setter.Value>-->
<!--                <ControlTemplate TargetType="sl:SelectedButton">-->
<!--                    <Grid>-->
<!--                        <VisualStateManager.VisualStateGroups>-->
<!--                            <VisualStateGroup x:Name="CommonStates">-->
<!--                                <VisualState x:Name="Normal"/>-->
<!--                                <VisualState x:Name="MouseOver">-->
<!--                                    <Storyboard>-->
<!--                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>-->
<!--                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image" d:IsOptimized="True" />-->
<!--                                        <DoubleAnimation Duration="0" To="5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="image" d:IsOptimized="True"/>-->
<!--                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="image" d:IsOptimized="True"/>-->
<!--                                    </Storyboard>-->
<!--                                </VisualState>-->
<!--                                <VisualState x:Name="Pressed">-->
<!--                                    <Storyboard>-->
<!--                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>-->
<!--                                    </Storyboard>-->
<!--                                </VisualState>-->
<!--                                <VisualState x:Name="Disabled">-->
<!--                                    <Storyboard>-->
<!--                                        <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity" To=".55"/>-->
<!--                                    </Storyboard>-->
<!--                                </VisualState>-->
<!--                            </VisualStateGroup>-->
<!--                            <VisualStateGroup x:Name="FocusStates">-->
<!--                                <VisualState x:Name="Focused">-->
<!--                                    <Storyboard>-->
<!--                                        <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>-->
<!--                                    </Storyboard>-->
<!--                                </VisualState>-->
<!--                                <VisualState x:Name="Unfocused" />-->
<!--                            </VisualStateGroup>-->
<!--                            <VisualStateGroup x:Name="SelectedStates">-->
<!--                                <VisualState x:Name="Selected">-->
<!--                                    <Storyboard>-->
<!--                                        <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>-->
<!--                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="image1" d:IsOptimized="True"/>-->
<!--                                        <DoubleAnimation Duration="0" To="4" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="image1" d:IsOptimized="True"/>-->
<!--                                    </Storyboard>-->
<!--                                </VisualState>-->
<!--                                <VisualState x:Name="UnSelected" />-->
<!--                            </VisualStateGroup>-->
<!--                        </VisualStateManager.VisualStateGroups>-->
<!--                        <Border x:Name="Background" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}">-->
<!--                            <Grid  Margin="1">-->
<!--                                <Border Opacity="0"  x:Name="BackgroundAnimation" />-->
<!--                                <Rectangle x:Name="BackgroundGradient" />-->
<!--                                <Image Margin="0,0,8,0" Source="../../Images/MJ/beijingtwo.png" Stretch="Fill"/>-->
<!--                                <Image x:Name="image" Margin="0,0,8,0" Opacity="0" Source="../../Images/MJ/dianji.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">-->
<!--                                    <Image.RenderTransform>-->
<!--                                        <CompositeTransform/>-->
<!--                                    </Image.RenderTransform>-->
<!--                                </Image>-->
<!--                                <Image x:Name="image1" Margin="0,0,8,0" Opacity="0" Source="../../Images/MJ/dianji.png" Stretch="Fill" RenderTransformOrigin="0.5,0.5">-->
<!--                                    <Image.RenderTransform>-->
<!--                                        <CompositeTransform/>-->
<!--                                    </Image.RenderTransform>-->
<!--                                </Image>-->
<!--                            </Grid>-->
<!--                        </Border>-->
<!--                        <ContentPresenter-->
<!--                                x:Name="contentPresenter"-->
<!--                                Content="{TemplateBinding Content}"-->
<!--                                ContentTemplate="{TemplateBinding ContentTemplate}"-->
<!--                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"-->
<!--                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"-->
<!--                                Margin="{TemplateBinding Padding}"/>-->
<!--                        <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Opacity="0" IsHitTestVisible="false"  Height="54" Width="217"/>-->
<!--                        <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1,0,0,0" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" Height="56" VerticalAlignment="Bottom" RenderTransformOrigin="0.734,0.709" />-->
<!--                    </Grid>-->
<!--                </ControlTemplate>-->
<!--            </Setter.Value>-->
<!--        </Setter>-->
<!--    </Style>-->
    
    <Style TargetType="sl:LevcnPager">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:LevcnPager">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid x:Name="BaseGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Grid.Resources>
                                <Style x:Key="ButtonStyle3" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="grid" Background="Black">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FFE49600" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Normal">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                                                    <ColorAnimation Duration="0" To="#3B999999" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Rectangle RadiusX="8" Stroke="#FFB2B2B2"/>
                                                    <ContentPresenter Margin="5,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>

                                <Style x:Key="ButtonStyle4" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <Rectangle RadiusX="8" Stroke="#FFA3A3A3">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                <GradientStop Color="#FFC1BABA" Offset="0"/>
                                                                <GradientStop Color="#FFBFB7B7" Offset="1"/>
                                                                <GradientStop Color="White" Offset="0.486"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <Style x:Key="TextBoxStyle1" TargetType="TextBox">
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Background" Value="#FFFFFFFF"/>
                                    <Setter Property="Foreground" Value="#FF000000"/>
                                    <Setter Property="Padding" Value="2"/>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                <GradientStop Color="#FF718597" Offset="0.375"/>
                                                <GradientStop Color="#FF617584" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="TextBox">
                                                <Grid x:Name="RootElement">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="MouseOverBorder"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="ReadOnly">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unfocused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="ValidationStates">
                                                            <VisualState x:Name="Valid"/>
                                                            <VisualState x:Name="InvalidUnfocused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="InvalidFocused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1">
                                                        <Grid>
                                                            <Border x:Name="ReadOnlyVisualElement" Background="#5EC9C9C9" Opacity="0"/>
                                                            <Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
                                                                <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Margin="0,-2,0,0"/>
                                                            </Border>
                                                        </Grid>
                                                    </Border>
                                                    <Border x:Name="DisabledVisualElement" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Background="#A5F7F7F7" IsHitTestVisible="False" Opacity="0"/>
                                                    <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Margin="1" Opacity="0"/>
                                                    <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                                                <ToolTip.Triggers>
                                                                    <EventTrigger RoutedEvent="Canvas.Loaded">
                                                                        <BeginStoryboard>
                                                                            <Storyboard>
                                                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                                                    </DiscreteObjectKeyFrame>
                                                                                </ObjectAnimationUsingKeyFrames>
                                                                            </Storyboard>
                                                                        </BeginStoryboard>
                                                                    </EventTrigger>
                                                                </ToolTip.Triggers>
                                                            </ToolTip>
                                                        </ToolTipService.ToolTip>
                                                        <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                                            <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                                            <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                                <ControlTemplate x:Key="ValidationToolTipTemplate">
                                    <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
                                        <Grid.RenderTransform>
                                            <TranslateTransform x:Name="xform" X="-25"/>
                                        </Grid.RenderTransform>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="OpenStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                                        </Storyboard>
                                                    </VisualTransition>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Closed">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Open">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform"/>
                                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
                                        <Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
                                        <Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
                                        <Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
                                        <Border Background="#FFDC000C" CornerRadius="2"/>
                                        <Border CornerRadius="2">
                                            <TextBlock Foreground="White" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                                <Style x:Key="select_comboBox" TargetType="ComboBox">
                                    <Setter Property="Padding" Value="6,2,25,2"/>
                                    <Setter Property="Background" Value="#FF1F3B53"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="TabNavigation" Value="Once"/>
                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                    <Setter Property="BorderBrush">
                                        <Setter.Value>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                <GradientStop Color="#FF718597" Offset="0.375"/>
                                                <GradientStop Color="#FF617584" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ComboBox">
                                                <Grid>
                                                    <Grid.Resources>
                                                        <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                                                            <Setter Property="Foreground" Value="#FF333333"/>
                                                            <Setter Property="Background" Value="#FF1F3B53"/>
                                                            <Setter Property="BorderBrush">
                                                                <Setter.Value>
                                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                                                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                                                        <GradientStop Color="#FF718597" Offset="0.375"/>
                                                                        <GradientStop Color="#FF617584" Offset="1"/>
                                                                    </LinearGradientBrush>
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter Property="BorderThickness" Value="1"/>
                                                            <Setter Property="Padding" Value="3"/>
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="ToggleButton">
                                                                        <Grid>
                                                                            <VisualStateManager.VisualStateGroups>
                                                                                <VisualStateGroup x:Name="CommonStates">
                                                                                    <VisualState x:Name="Normal"/>
                                                                                    <VisualState x:Name="MouseOver">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay"/>
                                                                                            <ColorAnimation Duration="0" To="#7FFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                            <ColorAnimation Duration="0" To="#CCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                            <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Pressed">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundOverlay2"/>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
                                                                                            <ColorAnimation Duration="0" To="#E5FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                            <ColorAnimation Duration="0" To="#BCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                            <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                            <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Disabled"/>
                                                                                </VisualStateGroup>
                                                                                <VisualStateGroup x:Name="CheckStates">
                                                                                    <VisualState x:Name="Checked">
                                                                                        <Storyboard>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOverlay3"/>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight"/>
                                                                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                                            <ColorAnimation Duration="0" To="#E5FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                                            <ColorAnimation Duration="0" To="#BCFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                                            <ColorAnimation Duration="0" To="#6BFFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                                            <ColorAnimation Duration="0" To="#F2FFFFFF" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient2"/>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Unchecked"/>
                                                                                </VisualStateGroup>
                                                                                <VisualStateGroup x:Name="FocusStates">
                                                                                    <VisualState x:Name="Focused">
                                                                                        <Storyboard>
                                                                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                                                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                                                                    <DiscreteObjectKeyFrame.Value>
                                                                                                        <Visibility>Visible</Visibility>
                                                                                                    </DiscreteObjectKeyFrame.Value>
                                                                                                </DiscreteObjectKeyFrame>
                                                                                            </ObjectAnimationUsingKeyFrames>
                                                                                        </Storyboard>
                                                                                    </VisualState>
                                                                                    <VisualState x:Name="Unfocused"/>
                                                                                </VisualStateGroup>
                                                                            </VisualStateManager.VisualStateGroups>
                                                                            <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" RadiusY="3" RadiusX="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                            <Rectangle x:Name="BackgroundOverlay" Fill="#FF448DCA" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                            <Rectangle x:Name="BackgroundOverlay2" Fill="#FF448DCA" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                            <Rectangle x:Name="BackgroundGradient" Margin="{TemplateBinding BorderThickness}" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="1">
                                                                                <Rectangle.Fill>
                                                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Rectangle.Fill>
                                                                            </Rectangle>
                                                                            <Rectangle x:Name="BackgroundOverlay3" Fill="#FF448DCA" Opacity="0" RadiusY="3" RadiusX="3" Stroke="#00000000" StrokeThickness="{TemplateBinding BorderThickness}"/>
                                                                            <Rectangle x:Name="BackgroundGradient2" Margin="{TemplateBinding BorderThickness}" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FFFFFFFF" StrokeThickness="1">
                                                                                <Rectangle.Fill>
                                                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                                                    </LinearGradientBrush>
                                                                                </Rectangle.Fill>
                                                                            </Rectangle>
                                                                            <Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="{TemplateBinding BorderThickness}" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed"/>
                                                                        </Grid>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Grid.Resources>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver"/>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="00:00:00" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="00:00:00" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusVisualElement"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Unfocused"/>
                                                            <VisualState x:Name="FocusedDropDown">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                                                        <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="ValidationStates">
                                                            <VisualState x:Name="Valid"/>
                                                            <VisualState x:Name="InvalidUnfocused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="InvalidFocused">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <Visibility>Visible</Visibility>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="ContentPresenterBorder">
                                                        <Grid>
                                                            <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                                                                <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                                                                    <Path.Fill>
                                                                        <SolidColorBrush x:Name="BtnArrowColor" Color="#FF333333"/>
                                                                    </Path.Fill>
                                                                </Path>
                                                            </ToggleButton>
                                                            <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,0,0,0">
                                                                <TextBlock  Text="{TemplateBinding SelectedItem}" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                                            </ContentPresenter>
                                                        </Grid>
                                                    </Border>
                                                    <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="2" RadiusX="2" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                                                    <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                                                <ToolTip.Triggers>
                                                                    <EventTrigger RoutedEvent="Canvas.Loaded">

                                                                    </EventTrigger>
                                                                </ToolTip.Triggers>
                                                            </ToolTip>
                                                        </ToolTipService.ToolTip>
                                                        <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                                                            <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="1,3,0,0"/>
                                                            <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="1,3,0,0"/>
                                                        </Grid>
                                                    </Border>
                                                    <Popup x:Name="Popup">
                                                        <Border x:Name="PopupBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" HorizontalAlignment="Stretch" Height="Auto">
                                                            <Border.Background>
                                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                                    <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                    <GradientStop Color="#FFFEFEFE" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Border.Background>
                                                            <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                                                                <ItemsPresenter/>
                                                            </ScrollViewer>
                                                        </Border>
                                                    </Popup>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <StackPanel Margin="0,0,10,0" Orientation="Horizontal" d:LayoutOverrides="Width" HorizontalAlignment="Right">
                                <Button  x:Name="FirstPageButton"  Content="首页" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0" Visibility="{TemplateBinding FirstLastButtonVisibility}"/>
                                <Button Name="PrePageButton" Content="上一页" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0" Visibility="{TemplateBinding PreNextButtonVisibility}"/>
                                <StackPanel Visibility="{TemplateBinding NumberButtonsVisibility}" Name="NumberButton" Margin="0,0,0,0" Orientation="Horizontal">
                                    <Button Content="1" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0"/>
                                    <Button Content="2" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0"/>
                                    <Button Content="3" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0"/>
                                    <Button Content="4" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0"/>
                                    <Button Content="5" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0"/>
                                </StackPanel>
                                <Button Name="NextPageButton" Content="下一页" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0" Visibility="{TemplateBinding PreNextButtonVisibility}"/>
                                <Button Name="LastPageButton" Content="尾页" Style="{StaticResource ButtonStyle3}" VerticalAlignment="Top" Cursor="Hand" Margin="8,0,0,0" Visibility="{TemplateBinding FirstLastButtonVisibility}"/>
                                <StackPanel x:Name="GoControlPanel" Visibility="{TemplateBinding GoControlVisibility}" Orientation="Horizontal">
                                    <TextBlock HorizontalAlignment="Left" Height="14" Margin="8,0,0,0" TextWrapping="Wrap" Text="转到" VerticalAlignment="Top" Width="23"/>
                                    <sl:NumberBox x:Name="UserInputPageNumber" Style="{StaticResource TextBoxStyle1}" VerticalContentAlignment="Top" HorizontalAlignment="Left" Height="19" TextWrapping="Wrap" VerticalAlignment="Top" Width="34" BorderBrush="#FFB2B2B2" Margin="0,0,0,0"/>
                                    <TextBlock HorizontalAlignment="Left" Height="14" Margin="0" TextWrapping="Wrap" Text="页" VerticalAlignment="Top" Width="13"/>

                                    <Button x:Name="GoButton" Content="GO" HorizontalAlignment="Left" Height="19" Style="{StaticResource ButtonStyle4}" VerticalAlignment="Top" Width="27" Cursor="Hand" Margin="8,0,0,0"/>
                                </StackPanel>
                                <StackPanel x:Name="PageSizePanel" Visibility="{TemplateBinding PageSizeVisibility}" Orientation="Horizontal">
                                    <TextBlock Text="  每页"/>
                                    <ComboBox IsEnabled="{TemplateBinding CustomPageSizeIsEnabled}" x:Name="pageSizeCB" Height="20" Width="46" Cursor="Hand" BorderBrush="#FFB2B2B2" Background="{x:Null}" Style="{StaticResource select_comboBox}">
                                        <!--                <ComboBoxItem IsSelected="True">20</ComboBoxItem>-->
                                        <!--                <ComboBoxItem>50</ComboBoxItem>-->
                                        <!--                <ComboBoxItem>100</ComboBoxItem>-->
                                        <!--                <ComboBoxItem>200</ComboBoxItem>-->
                                    </ComboBox>
                                    <TextBlock Text="条"/>
                                </StackPanel>
                            </StackPanel>
                            <Grid HorizontalAlignment="Left" Margin="15,0,0,0" VerticalAlignment="Top" Width="218">
                                <TextBlock x:Name="PageTextControl" TextWrapping="Wrap" Text="共有 {0} 条记录，当前第 {1}/{2} 页" Margin="0,0,0,0"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="sl:ObjectEditorPanel">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:ObjectEditorPanel">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--    <Style TargetType="editors:EditItemNumberBox">-->
    <!--        <Setter Property="Template">-->
    <!--            <Setter.Value>-->
    <!--                <ControlTemplate TargetType="editors:EditItemNumberBox">-->
    <!--                    <Border Background="{TemplateBinding Background}"-->
    <!--                            BorderBrush="{TemplateBinding BorderBrush}"-->
    <!--                            BorderThickness="{TemplateBinding BorderThickness}">-->
    <!--                    </Border>-->
    <!--                </ControlTemplate>-->
    <!--            </Setter.Value>-->
    <!--        </Setter>-->
    <!--    </Style>-->

    <Style TargetType="editor1:ETextBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="editor1:ETextBox">
                    <Border x:Name="aa" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="sl:EditItemDateTimePicker">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:EditItemDateTimePicker">
                    <Border x:Name="aa" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="BrowserStates">
                                <VisualState x:Name="Browser">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TB_TextBrowse">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TB_TextBrowse">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Editor">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid  Margin="0,0,0,0" x:Name="LayoutRoot">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <!--                            标签部分-->
                            <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Width="{TemplateBinding LableWidth}">
                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" >
                                    <TextBlock x:Name="TB_ItemLableRequired" Visibility="Collapsed" TextWrapping="Wrap" Foreground="Red"  Text="*"  Margin="0,8,0,0"/>
                                    <TextBlock x:Name="TB_ItemLable" Text="{TemplateBinding LabelText}" FontSize="12" TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                            <!--                            文本框部分-->
                            <Grid Grid.Column="1" >
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="0" >
                                    <!--第一行的文本框和验证-->
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid Grid.Column="0" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <telerik:RadDateTimePicker Grid.Column="0" VerticalAlignment="Stretch" 
                                                               VerticalContentAlignment="Top"
                                                               ErrorTooltipContent="时间格式不正确"
                                                               x:Name="TB_TextBox1" 
                                                               HorizontalAlignment="Stretch" 
                                                               Margin="0" 
                                                               DateTimeWatermarkContent="{TemplateBinding WatermarkContent}" 
                                                               IsReadOnly="{TemplateBinding ReadOnly}" 
                                                               IsTooltipEnabled="True" 
                                                               FontSize="12"
                                                               SelectedDate="{TemplateBinding DateTimeValue}" />
                                        <telerik:RadDateTimePicker Grid.Column="1" VerticalAlignment="Stretch" 
                                                                   Visibility="Collapsed"
                                                               VerticalContentAlignment="Top"
                                                               ErrorTooltipContent="时间格式不正确"
                                                               x:Name="TB_TextBox2" 
                                                               HorizontalAlignment="Stretch" 
                                                               Margin="0" 
                                                               DateTimeWatermarkContent="{TemplateBinding WatermarkContent}" 
                                                               IsReadOnly="{TemplateBinding ReadOnly}" 
                                                               IsTooltipEnabled="True" 
                                                               FontSize="12"
                                                               SelectedDate="{TemplateBinding AnotherDateTimeValue}" />
                                        </Grid>
                                    <!--                                    <Grid Visibility="{TemplateBinding SaveVisibility}" Width="30" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Right" >-->
                                    <!--                                    <Button x:Name="TB_Save" Content="存"></Button>-->
                                    <!--                                    </Grid>-->
                                    <TextBlock VerticalAlignment="Stretch" x:Name="TB_TextBrowse" Margin="6,4,0,0" Grid.Column="0" HorizontalAlignment="Stretch" Visibility="Collapsed" TextWrapping="Wrap" FontSize="12" Grid.RowSpan="2" />
                                    <Grid Grid.Row="0" Grid.Column="1" Visibility="{TemplateBinding ValidateVisibiliti}">
                                        <sl:LevcnValidTooltip x:Name="Tip1"  
                                                                   State="{TemplateBinding ValidState}"
                                                                   FocusMsg="{TemplateBinding FocusMsg}" 
                                                                   PassMsg="{TemplateBinding PassMsg}" 
                                                                   DefaultMsg="{TemplateBinding DefaultMsg}" 
                                                                   RequiredErrorMsg="{TemplateBinding RequiredErrorMsg}" 
                                                                   OverMaxLengthErrorMsg="{TemplateBinding OverMaxLengthErrorMsg}" 
                                                                   OverMaxErrorMsg="{TemplateBinding OverMaxErrorMsg}" 
                                                                   LowMinErrorMsg="{TemplateBinding LowMinErrorMsg}" 
                                                                   ShowIcon="True" ShowText="True" 
                                                                   />
                                        <!--                                        <TextBlock Text="asdfasdfasdfasdf" ></TextBlock>-->
                                    </Grid>
                                </Grid>
                                <Grid Grid.Row="1" Visibility="{TemplateBinding ValidateVisibiliti}">
                                    <sl:LevcnValidTooltip ErrorMsg="{TemplateBinding ErrorMsg}" 
                                                                   State="{TemplateBinding ValidState}" 
                                                                   PassMsg="{TemplateBinding PassMsg}" 
                                                                   FocusMsg="{TemplateBinding FocusMsg}" 
                                                                   DefaultMsg="{TemplateBinding DefaultMsg}" 
                                                                   RequiredErrorMsg="{TemplateBinding RequiredErrorMsg}" 
                                                                   OverMaxLengthErrorMsg="{TemplateBinding OverMaxLengthErrorMsg}" 
                                                                   OverMaxErrorMsg="{TemplateBinding OverMaxErrorMsg}" 
                                                                   LowMinErrorMsg="{TemplateBinding LowMinErrorMsg}" 
                                                               x:Name="Tip2" OnlyNotPassShow="True" ShowIcon="True" BlurHidden="True"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

    <Style TargetType="sl:DropDownBox" x:Key="DropDownBoxStyle">
        <Setter Property="BorderBrush" Value="DarkGray" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:DropDownBox">
                    <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2">
                        
                    </Border>
                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput" Grid.Column="0"
                                Text="{Binding ContentText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								CurrentText="{Binding ContentText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								IsReadOnly="{TemplateBinding ReadOnly}" Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0"
                                MinHeight="0" Margin="{TemplateBinding BorderThickness}"
                                WatermarkContent="{TemplateBinding WatermarkContent}"
                                WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                TextAlignment="{TemplateBinding TextAlignment}" TabIndex="0"
                                SelectionOnFocus="{TemplateBinding SelectionOnFocus}"/>
                        
                        <telerik:RadDropDownButton Grid.Column="1" TabIndex="1" Margin="-1 0 0 0"
                                Padding="0" DropDownIndicatorVisibility="Collapsed"
                                x:Name="PART_DropDownButton"
                                PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CloseOnEnter="True" IsTabStop="False"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Center" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                DropDownContent="{TemplateBinding DropDownContent}"
                                DropDownContentTemplate="{TemplateBinding DropDownTemplate}"
                                                   Content="  ▼  "
                                                   
                                 >
                            
                        </telerik:RadDropDownButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="sl:DropDownBox" BasedOn="{StaticResource DropDownBoxStyle}">

    </Style>

    <Style TargetType="sl:DropDownTreeViewBox" BasedOn="{StaticResource DropDownBoxStyle}">
<!--        <Setter Property="DropDownTemplate">-->
<!--            <Setter.Value>-->
<!--                <DataTemplate>-->
<!--                    <StackPanel>-->
<!--                        <telerik:RadTreeView DataContext="{Binding RelativeSource={RelativeSource AncestorType=local:DropDownTreeViewBox,Mode=FindAncestor}}" x:Name="xTreeView"-->
<!--						ItemsSource="{Binding ItemsSource}"-->
<!--						ItemTemplateSelector="{Binding ItemTemplateSelector}"-->
<!--						ItemTemplate="{Binding ItemTemplate}"-->
<!--						IsExpandOnSingleClickEnabled="True"-->
<!--						BorderThickness="0"-->
<!--						 />-->
<!--                    </StackPanel>-->
<!--                </DataTemplate>-->
<!--            </Setter.Value>-->
<!--        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="sl:DropDownTreeViewBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2">

                        </Border>
                        <telerik:RadWatermarkTextBox x:Name="PART_DateTimeInput" Grid.Column="0"
                                Text="{Binding ContentText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								CurrentText="{Binding ContentText, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
								IsReadOnly="{TemplateBinding ReadOnly}" Foreground="{TemplateBinding Foreground}"
                                VerticalAlignment="Stretch" Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="0"
                                MinHeight="0" Margin="{TemplateBinding BorderThickness}"
                                WatermarkContent="{TemplateBinding WatermarkContent}"
                                WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
                                TextAlignment="{TemplateBinding TextAlignment}" TabIndex="0"
                                SelectionOnFocus="{TemplateBinding SelectionOnFocus}"/>
                        <telerik:RadDropDownButton Grid.Column="1" TabIndex="1" Margin="-1 0 0 0"
                                Padding="0" 
                                                   DropDownIndicatorVisibility="Collapsed"
                                x:Name="PART_DropDownButton"
                                PopupPlacementTarget="{Binding ElementName=PART_DateTimeInput}"
                                IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                CloseOnEnter="True" IsTabStop="False"
                                                   DropDownWidth="{Binding DropDownWidth, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   DropDownHeight="{Binding DropDownHeight, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Center" HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                
                                DropDownContentTemplate="{TemplateBinding DropDownTemplate}"
                                                   Content="  ▼  "
                                           
                            >
                            <telerik:RadDropDownButton.DropDownContent>
                                <telerik:RadTreeView x:Name="PART_TreeView"
                                ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            						ItemTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            						ItemTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            						IsExpandOnSingleClickEnabled="True"
                                                     SelectedItem="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                     
                            						BorderThickness="0"/>
                            </telerik:RadDropDownButton.DropDownContent>
                        </telerik:RadDropDownButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
   


<!--    -->
<!---->
<!--    <Style TargetType="local:SearchBox">-->
<!--        <Setter Property="Template">-->
<!--            <Setter.Value>-->
<!--                <ControlTemplate TargetType="local:SearchBox">-->
<!--                    <Border Background="{TemplateBinding Background}"-->
<!--                            BorderBrush="{TemplateBinding BorderBrush}"-->
<!--                            BorderThickness="{TemplateBinding BorderThickness}">-->
<!--                    </Border>-->
<!--                </ControlTemplate>-->
<!--            </Setter.Value>-->
<!--        </Setter>-->
<!--    </Style>-->
</ResourceDictionary>
